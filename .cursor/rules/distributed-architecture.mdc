---
description: Distributed service coordination patterns and architecture principles
globs: internal/coordination/*,internal/api/*,cmd/redbench/*
---

# Distributed Service Architecture Rules

## HTTP-Based Coordination Principles
- Use RESTful HTTP APIs for all service-to-service communication
- Implement designated leader pattern (no complex leader election)

## Synchronization Strategy
- Use timestamp-based coordination for precise synchronization
- Avoid artificial delays in favor of coordinated start times

## Data Model Requirements
- Use type-safe structures for all inter-service communication
- Avoid `map[string]interface{}` in core business logic
- Implement proper JSON marshaling for all coordination types
- Include creation timestamps and unique IDs for traceability

## Worker Management
- Auto-generate unique worker IDs (hostname + UUID)
- Implement heartbeat monitoring with configurable timeouts
